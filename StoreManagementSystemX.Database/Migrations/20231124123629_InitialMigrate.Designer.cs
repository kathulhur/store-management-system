// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreManagementSystemX.Database;

#nullable disable

namespace StoreManagementSystemX.Database.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231124123629_InitialMigrate")]
    partial class InitialMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.PayLater", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("PayLaters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("660a414f-d862-4384-9176-05b43ac82254"),
                            CustomerName = "",
                            IsPaid = false,
                            PaidAt = new DateTime(2023, 11, 24, 20, 36, 28, 746, DateTimeKind.Local).AddTicks(5660),
                            TransactionId = new Guid("f076a70f-3597-4c08-bc91-4f06aa92e3d7")
                        });
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<int>("InStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("435e33dc-6d75-4121-87cb-216e43a97143"),
                            Barcode = "1",
                            CostPrice = 11m,
                            CreatedById = new Guid("04fc04ab-a071-4d9d-98f4-aa2568ed7700"),
                            InStock = 2,
                            Name = "Product 1",
                            SellingPrice = 21m
                        },
                        new
                        {
                            Id = new Guid("dec82413-2723-4ad8-a3c2-20da0cd06b72"),
                            Barcode = "2",
                            CostPrice = 12m,
                            CreatedById = new Guid("04fc04ab-a071-4d9d-98f4-aa2568ed7700"),
                            InStock = 3,
                            Name = "Product 2",
                            SellingPrice = 22m
                        },
                        new
                        {
                            Id = new Guid("c5b4cff3-a38d-49e7-b47f-ffdffcf5f257"),
                            Barcode = "3",
                            CostPrice = 13m,
                            CreatedById = new Guid("04fc04ab-a071-4d9d-98f4-aa2568ed7700"),
                            InStock = 5,
                            Name = "Product 3",
                            SellingPrice = 23m
                        });
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.StockPurchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MadeById")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MadeById");

                    b.ToTable("StockPurchases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfc02b33-bc9c-4fb6-8c2f-ccb477fd2090"),
                            DateTime = new DateTime(2023, 11, 24, 20, 36, 28, 746, DateTimeKind.Local).AddTicks(5667),
                            MadeById = new Guid("04fc04ab-a071-4d9d-98f4-aa2568ed7700")
                        });
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.StockPurchaseProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StockPurchaseId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantityBought")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId", "StockPurchaseId");

                    b.HasIndex("StockPurchaseId");

                    b.ToTable("StockPurchaseProducts");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("435e33dc-6d75-4121-87cb-216e43a97143"),
                            StockPurchaseId = new Guid("dfc02b33-bc9c-4fb6-8c2f-ccb477fd2090"),
                            Price = 11m,
                            QuantityBought = 2
                        },
                        new
                        {
                            ProductId = new Guid("dec82413-2723-4ad8-a3c2-20da0cd06b72"),
                            StockPurchaseId = new Guid("dfc02b33-bc9c-4fb6-8c2f-ccb477fd2090"),
                            Price = 12m,
                            QuantityBought = 3
                        },
                        new
                        {
                            ProductId = new Guid("c5b4cff3-a38d-49e7-b47f-ffdffcf5f257"),
                            StockPurchaseId = new Guid("dfc02b33-bc9c-4fb6-8c2f-ccb477fd2090"),
                            Price = 13m,
                            QuantityBought = 5
                        });
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70bc0813-615a-427a-b562-516f7151f0cf"),
                            DateTime = new DateTime(2023, 11, 24, 20, 36, 28, 746, DateTimeKind.Local).AddTicks(5634),
                            SellerId = new Guid("04fc04ab-a071-4d9d-98f4-aa2568ed7700")
                        },
                        new
                        {
                            Id = new Guid("f076a70f-3597-4c08-bc91-4f06aa92e3d7"),
                            DateTime = new DateTime(2023, 11, 24, 20, 36, 28, 746, DateTimeKind.Local).AddTicks(5655),
                            SellerId = new Guid("04fc04ab-a071-4d9d-98f4-aa2568ed7700")
                        });
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.TransactionProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceSold")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantityBought")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId", "TransactionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionProducts");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("435e33dc-6d75-4121-87cb-216e43a97143"),
                            TransactionId = new Guid("70bc0813-615a-427a-b562-516f7151f0cf"),
                            CostPrice = 11m,
                            PriceSold = 21m,
                            ProductName = "Product 1",
                            QuantityBought = 1
                        },
                        new
                        {
                            ProductId = new Guid("dec82413-2723-4ad8-a3c2-20da0cd06b72"),
                            TransactionId = new Guid("70bc0813-615a-427a-b562-516f7151f0cf"),
                            CostPrice = 12m,
                            PriceSold = 22m,
                            ProductName = "Product 2",
                            QuantityBought = 4
                        },
                        new
                        {
                            ProductId = new Guid("c5b4cff3-a38d-49e7-b47f-ffdffcf5f257"),
                            TransactionId = new Guid("f076a70f-3597-4c08-bc91-4f06aa92e3d7"),
                            CostPrice = 13m,
                            PriceSold = 23m,
                            ProductName = "Product 3",
                            QuantityBought = 2
                        },
                        new
                        {
                            ProductId = new Guid("435e33dc-6d75-4121-87cb-216e43a97143"),
                            TransactionId = new Guid("f076a70f-3597-4c08-bc91-4f06aa92e3d7"),
                            CostPrice = 11m,
                            PriceSold = 21m,
                            ProductName = "Product 1",
                            QuantityBought = 3
                        });
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04fc04ab-a071-4d9d-98f4-aa2568ed7700"),
                            Password = "password",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.PayLater", b =>
                {
                    b.HasOne("StoreManagementSystemX.Database.Models.Transaction", "Transaction")
                        .WithOne("PayLater")
                        .HasForeignKey("StoreManagementSystemX.Database.Models.PayLater", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.Product", b =>
                {
                    b.HasOne("StoreManagementSystemX.Database.Models.User", "CreatedBy")
                        .WithMany("ProductsCreated")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.StockPurchase", b =>
                {
                    b.HasOne("StoreManagementSystemX.Database.Models.User", "MadeBy")
                        .WithMany("StockPurchasesMade")
                        .HasForeignKey("MadeById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MadeBy");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.StockPurchaseProduct", b =>
                {
                    b.HasOne("StoreManagementSystemX.Database.Models.Product", "Product")
                        .WithMany("StockPurchaseProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagementSystemX.Database.Models.StockPurchase", "StockPurchase")
                        .WithMany("StockPurchaseProducts")
                        .HasForeignKey("StockPurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockPurchase");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.Transaction", b =>
                {
                    b.HasOne("StoreManagementSystemX.Database.Models.User", "Seller")
                        .WithMany("TransactionsHandled")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.TransactionProduct", b =>
                {
                    b.HasOne("StoreManagementSystemX.Database.Models.Product", "Product")
                        .WithMany("SoldStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagementSystemX.Database.Models.Transaction", "Transaction")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.User", b =>
                {
                    b.HasOne("StoreManagementSystemX.Database.Models.User", "CreatedBy")
                        .WithMany("UsersCreated")
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.Product", b =>
                {
                    b.Navigation("SoldStocks");

                    b.Navigation("StockPurchaseProducts");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.StockPurchase", b =>
                {
                    b.Navigation("StockPurchaseProducts");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.Transaction", b =>
                {
                    b.Navigation("PayLater");

                    b.Navigation("TransactionProducts");
                });

            modelBuilder.Entity("StoreManagementSystemX.Database.Models.User", b =>
                {
                    b.Navigation("ProductsCreated");

                    b.Navigation("StockPurchasesMade");

                    b.Navigation("TransactionsHandled");

                    b.Navigation("UsersCreated");
                });
#pragma warning restore 612, 618
        }
    }
}
